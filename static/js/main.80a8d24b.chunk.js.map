{"version":3,"sources":["components/Button/Button.module.scss","components/Pad/Pad.module.scss","components/Button/Button.js","sounds/1.mp3","sounds/2.mp3","sounds/3.mp3","sounds/4.mp3","redux/actionsType/index.js","redux/actions/index.js","components/Pad/Pad.js","App.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","color","getClickedBtnColor","isPlay","onClick","className","styles","btn","defaultProps","SET_GAME_SPEED","SET_SEQUENCE","SET_SEQUENCE_TO_GUESS","SET_ROUND_NUMBER","setGameSpeed","value","type","payload","setGameSequence","sequence","setGameSequenceToGuess","sequenceToGuess","setRoundNumber","number","Pad","props","useState","play","setPlay","setColor","canClick","setCanClick","gameSpeed","useSelector","state","speed","roundNumber","Sequence","SequenceToGuess","dispatch","useDispatch","getRandomPanel","panel","parseInt","Math","random","length","useEffect","start","startGame","push","playSound","audioFile","hilight","a","Promise","resolve","reject","setAudio","setTimeout","audio","Audio","green","blue","red","yellow","guessSequence","shift","setStart","alert","pad","App","round","onChange","e","level","setLevel","target","disabled","initialState","store","createStore","action","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a8d24b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Lkv5\",\"green\":\"Button_green__3ZgLe\",\"blue\":\"Button_blue__2kTUw\",\"red\":\"Button_red__1sjHo\",\"yellow\":\"Button_yellow__1IL4H\",\"play\":\"Button_play__3gBb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pad\":\"Pad_pad__3aO9v\"};","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Button.module.scss'\n\nButton.propTypes = {\n    color: PropTypes.string,\n    isPlay: PropTypes.bool,\n}\n\nButton.defaultProps = {\n    color: 'gray',\n    isPlay: false\n}\nexport default function Button({ color, getClickedBtnColor, isPlay }) {\n    return (\n        <button onClick={() => { getClickedBtnColor(color) }} className={`${styles.btn} ${styles[color]} ${isPlay ? styles['play'] : ''}`}></button>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/1.38b1fd45.mp3\";","export default __webpack_public_path__ + \"static/media/2.24c67b31.mp3\";","export default __webpack_public_path__ + \"static/media/3.6629d159.mp3\";","export default __webpack_public_path__ + \"static/media/4.c46b9b8f.mp3\";","export const SET_GAME_SPEED = \"SET_GAME_SPEED\"\nexport const SET_SEQUENCE = \"SET_SEQUENCE\"\nexport const SET_SEQUENCE_TO_GUESS = \"SET_SEQUENCE_TO_GUESS\"\nexport const SET_ROUND_NUMBER = \"SET_ROUND_NUMBER\"","import { SET_GAME_SPEED, SET_SEQUENCE, SET_SEQUENCE_TO_GUESS, SET_ROUND_NUMBER } from '../actionsType'\n\nexport const setGameSpeed = value => {\n    return {\n        type: SET_GAME_SPEED,\n        payload: value\n    }\n}\n\nexport const setGameSequence = sequence => {\n    return {\n        type: SET_SEQUENCE,\n        payload: sequence\n    }\n}\n\nexport const setGameSequenceToGuess = sequenceToGuess => {\n    return {\n        type: SET_SEQUENCE_TO_GUESS,\n        payload: sequenceToGuess\n    }\n}\n\nexport const setRoundNumber = number => {\n    return {\n        type: SET_ROUND_NUMBER,\n        payload: number\n    }\n}","import React, { useEffect, useState } from 'react'\nimport Button from '../Button/Button'\nimport styles from './Pad.module.scss'\nimport green from '../../sounds/1.mp3'\nimport red from '../../sounds/2.mp3'\nimport blue from '../../sounds/3.mp3'\nimport yellow from '../../sounds/4.mp3'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setGameSequence, setGameSequenceToGuess, setRoundNumber } from '../../redux/actions'\n\nexport default function Pad(props) {\n    const [play, setPlay] = useState(false)\n    const [color, setColor] = useState('')\n    const [canClick, setCanClick] = useState(false)\n\n\n    const gameSpeed = useSelector(state => state.speed);\n    const roundNumber = useSelector(state => state.roundNumber)\n    const Sequence = useSelector(state => state.sequence)\n    const SequenceToGuess = useSelector(state => state.sequenceToGuess)\n    const dispatch = useDispatch()\n\n    const getRandomPanel = () => {\n        const panel = ['blue', 'red', 'green', 'yellow']\n        return panel[parseInt(Math.random() * panel.length)]\n    }\n\n    useEffect(() => {\n        //Set first sequence\n        if (SequenceToGuess.length === 0 && Sequence.length === 0 && props.start) {\n            const sequence = [getRandomPanel()];\n            const sequenceToGuess = [...sequence];\n            dispatch(setGameSequence(sequence))\n            dispatch(setGameSequenceToGuess(sequenceToGuess))\n            startGame(sequence)\n        }\n        //set New round and increase sequence\n        if (SequenceToGuess.length === 0 && Sequence.length !== 0) {\n            dispatch(setRoundNumber(roundNumber + 1))\n            Sequence.push(getRandomPanel())\n            const sequenceToGuess = [...Sequence];\n            dispatch(setGameSequence(Sequence))\n            dispatch(setGameSequenceToGuess(sequenceToGuess))\n            startGame(Sequence)\n        }\n\n    }, [SequenceToGuess, props.start])\n\n\n    const playSound = audioFile => {\n        audioFile.play();\n    }\n    const hilight = async (color) => {\n        return new Promise((resolve, reject) => {\n            setPlay(true)\n            setColor(color)\n            playSound(setAudio(color))\n            setTimeout(() => {\n                setPlay(false)\n                setColor('')\n                setTimeout(() => {\n                    resolve();\n                }, 500)\n            }, gameSpeed);\n        })\n    }\n    const setAudio = (color) => {\n        let audio = null;\n        switch (color) {\n            case 'green':\n                audio = new Audio(green);\n                break;\n            case 'blue':\n                audio = new Audio(blue);\n                break;\n            case 'red':\n                audio = new Audio(red);\n                break;\n            case 'yellow':\n                audio = new Audio(yellow);\n                break;\n        }\n        return audio\n    }\n\n    const getClickedBtnColor = (color) => {\n        if (!canClick) return\n        //Get expected sequence\n        let guessSequence = [...SequenceToGuess];\n        //Get first color of sequnce\n        const expectedColor = SequenceToGuess.shift();\n\n        //Compare current clicked color and expected\n        if (expectedColor === color) {\n            setCanClick(false)\n            playSound(setAudio(color))\n            //Remove this color from guessSequnece\n            setTimeout(() => {\n                guessSequence.shift()\n                dispatch(setGameSequenceToGuess(guessSequence))\n                setCanClick(true)\n            }, 1000)\n\n        } else {\n            dispatch(setGameSequence([]))\n            dispatch(setGameSequenceToGuess([]))\n            dispatch(setRoundNumber(1))\n            setCanClick(false)\n            props.setStart(false)\n            alert('Game over')\n        }\n    }\n\n    const startGame = async (sequence) => {\n        for (const color of sequence) {\n            await hilight(color)\n        }\n        setCanClick(true)\n    }\n    return (\n        <div className={`${styles.pad}`}>\n            <Button getClickedBtnColor={getClickedBtnColor} isPlay={play && color === 'green'} color=\"green\" />\n            <Button getClickedBtnColor={getClickedBtnColor} isPlay={play && color === 'red'} color=\"red\" />\n            <Button getClickedBtnColor={getClickedBtnColor} isPlay={play && color === 'blue'} color=\"blue\" />\n            <Button getClickedBtnColor={getClickedBtnColor} isPlay={play && color === 'yellow'} color=\"yellow\" />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pad from './components/Pad/Pad';\nimport { setGameSpeed } from './redux/actions'\n\nfunction App() {\n  const [start, setStart] = useState(false)\n  const round = useSelector(state => state.roundNumber)\n  const dispatch = useDispatch();\n\n  const setLevel = level => {\n    setStart(false)\n    switch (level) {\n      case 'easy':\n        dispatch(setGameSpeed(1500))\n        break;\n      case 'medium':\n        dispatch(setGameSpeed(1000))\n        break;\n      case 'hard':\n        dispatch(setGameSpeed(400))\n        break\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Simon says</h1>\n      <p>Round {round}</p>\n      <p>Level:<select onChange={(e) => { setLevel(e.target.value) }}>\n        <option value=\"easy\">easy</option>\n        <option value=\"medium\">medium</option>\n        <option value=\"hard\">hard</option>\n      </select></p>\n      <Pad start={start} setStart={setStart} />\n      <button\n        onClick={() => { setStart(true) }}\n        disabled={start}\n      > start game</button>\n    </div >\n  );\n}\n\nexport default App;\n","import { SET_GAME_SPEED, SET_SEQUENCE_TO_GUESS, SET_SEQUENCE, SET_ROUND_NUMBER } from '../actionsType'\n\nconst initialState = {\n    speed: 1500,\n    sequence: [],\n    sequenceToGuess: [],\n    roundNumber: 1\n}\n\nexport default function gameReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_GAME_SPEED:\n            return {\n                ...state,\n                speed: action.payload,\n                sequence: [],\n                roundNumber: 1,\n                sequenceToGuess: []\n            }\n        case SET_SEQUENCE:\n            return { ...state, sequence: action.payload }\n        case SET_SEQUENCE_TO_GUESS:\n            return { ...state, sequenceToGuess: action.payload }\n        case SET_ROUND_NUMBER:\n            return { ...state, roundNumber: action.payload }\n\n        default:\n            return state\n    }\n}","\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport gameReducer from './reducers'\n\nexport const store = createStore(gameReducer, composeWithDevTools())\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}